import Head from 'next/head';
import Post from '../components/Post';
import { useState, useEffect } from 'react';
import {
  collection,
  query,
  orderBy,
  onSnapshot,
  doc,
  setDoc,
  getDoc,
  updateDoc,
} from 'firebase/firestore';
import { db, auth } from '../firebase';
import Votes from '../components/Votes';
import { useAuthState } from 'react-firebase-hooks/auth';

export default function Home() {
  const [user] = useAuthState(auth);
  const [allPosts, setAllPosts] = useState();

  const getAllPosts = async () => {
    const postCollectionRef = collection(db, 'posts');
    const q = query(postCollectionRef, orderBy('timestamp', 'desc'));
    const unsubscribe = onSnapshot(q, (snapshot) => {
      setAllPosts(
        snapshot.docs.map((doc) => ({ ...doc.data(), id: doc.id }))
      );
    });

    return unsubscribe;
  };

  useEffect(() => {
    getAllPosts();
  }, []);

  const onVote = async (postId, vote, userId) => {
    const postRef = doc(db, 'posts', postId);
    const document = await getDoc(postRef);
    const documentData = document.data();
    const { voteCount, postVotes } = documentData;

    const existingVote = documentData?.postVotes.find(
      (vote) => vote.id !== userId
    );
    if (!existingVote) {
      await updateDoc(postRef, {
        voteCount: voteCount + vote,
        postVotes: [...postVotes, userId],
      });
    } else {
      // check if user removing existing upvote or downvote
    }
  };

  return (
    <div className="md:w-1/2 mx-auto">
      <Head>
        <title>braindump</title>
        <meta
          name="description"
          content="Generated by create next app"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="bg-slate-600 rounded p-2">
        <h1 className="text-teal-50 text-center font-bold">
          Latest Posts
        </h1>
        {allPosts?.map((post) => (
          <div key={post.id} className="flex">
            <Votes
              currentVoteCount={post.voteCount}
              id={post.id}
              post={post}
              onVote={onVote}
            />
            <Post post={post} />
          </div>
        ))}
      </div>
    </div>
  );
}
